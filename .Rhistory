facet_wrap(~ Ar, 2)
Storstadsområde
ggplot(filter(df_reg), aes(x = kr_m2, group = Storstadsområde)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(fill = Storstadsområde)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = c(0.87,0.20),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Grupp_Namn, 2)
ggplot(filter(df_reg), aes(x = kr_m2, group = Storstadsområde)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(color = Storstadsområde)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = c(0.87,0.20),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Grupp_Namn, 2)
ggplot(filter(df_reg), aes(x = kr_m2, group = Storstadsområde)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(fill = Storstadsområde)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = c(0.87,0.20),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Grupp_Namn, 2)
ggplot(filter(df_reg), aes(x = kr_m2, group = Grupp_Namn)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(fill = Grupp_Namn)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = c(0.87,0.20),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Storstadsområde, 2)
# c(0.87,0.20)
ggplot(filter(df_reg), aes(x = kr_m2, group = Grupp_Namn)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(fill = Grupp_Namn)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Storstadsområde, 2)
Grupp_Namn
ggplot(filter(df_reg), aes(x = kr_m2, group = Storstadsområde)) +
geom_histogram(alpha = 1, size = 1, binwidth = 200,  aes(fill = Storstadsområde)) +
geom_vline(xintercept = mean(df_reg$kr_m2), size = 0.3, linetype = "dashed") +
theme(legend.position = c(0.87,0.20),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title  = element_blank(),
axis.ticks.y.left = element_blank(),
strip.background = element_rect(fill="white"),
axis.ticks.x = element_blank(),
text = element_text(colour = "black", size = 8),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
#legend.margin = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "#9d9d9c", size = 0.1)) +
scale_x_continuous(limits = c(0, 5000),
labels = Svensk_Antal) +
scale_y_continuous(breaks = seq(0, 2000, 500)) +
färg6 +
facet_wrap(~ Grupp_Namn, 2)
install.packages("installr")
install.packages(c("audio", "backports", "bit", "bit64", "boot", "broom", "class", "cli", "clipr", "codetools", "colorspace", "cowplot", "data.table", "dbplyr", "DescTools", "digest", "dplyr", "expm", "flextable", "forcats", "fs", "generics", "ggalluvial", "gganimate", "ggforce", "ggplot2", "ggpubr", "ggrepel", "gh", "glue", "gtools", "haven", "htmltools", "htmlwidgets", "igraph", "janitor", "KernSmooth", "knitr", "labeling", "lattice", "lifecycle", "lubridate", "magrittr", "MASS", "Matrix", "mgcv", "modelr", "mvtnorm", "nlme", "nnet", "odbc", "officer", "openssl", "openxlsx", "osmdata", "pillar", "pkgbuild", "plotly", "plyr", "processx", "promises", "ps", "purrr", "R6", "raster", "Rcpp", "RcppEigen", "readr", "reshape2", "rJava", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "scales", "spatial", "stringi", "survival", "sys", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "Unicode", "usethis", "vctrs", "writexl", "xfun", "xlsx", "xml2", "zip"))
library(installr)
updateR()
install.R()
library(installr)
install.packages("intallr")
library(tidyr)
install.packages("tidyr")
uppdatera <- function(list) {
list.of.packages <- list
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
}
uppdatera(c("tidyr"))
uppdatera(c("readxl"))
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont'
))
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont'
))
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont',
'installr'
))
installr::check.for.updates.R()
installr::install.rtools()
installr::updateR()
installr::is.RStudio()
installr::check.for.updates.R()
uppdatera <- function(list) {
list.of.packages <- list
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
}
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont',
'installr'
))
uppdatera <- function(list) {
list.of.packages <- list
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages else print("Alla packet uppdaterade"))
}
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont',
'installr'
))
uppdatera <- function(list) {
list.of.packages <- list
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) {install.packages new.packages} else {print("Alla packet uppdaterade")})
}
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont',
'installr'
))
uppdatera <- function(list) {
list.of.packages <- list
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
}
uppdatera(c('tidyr',
'readxl',
'stringr',
'ggplot2',
'gganimate',
'png',
'writexl',
'janitor',
'xlsx',
'odbc',
'DBI',
'gridExtra',
'ggpubr',
'ggridges',
'httr',
'jsonlite',
'lubridate',
'utf8',
'openxlsx',
'janitor',
'ggthemes',
'ggalluvial',
'ggforce',
'plotly',
'dplyr',
'flextable',
'officer',
'extrafont',
'installr'
))
library(tidyr)
library(readxl)
library(stringr)
library(ggplot2)
library(gganimate)
library(png)
library(writexl)
library(janitor)
library(xlsx)
library(odbc)
library(DBI)
library(gridExtra)
library(ggpubr)
library(ggridges)
library(httr)
library(jsonlite)
library(lubridate)
library(utf8)
library(openxlsx)
library(janitor)
library(ggthemes)
library(ggalluvial)
library(ggforce)
library(plotly)
library(dplyr)
library(flextable)
library(officer)
library(extrafont)
p1 <- "H:/Statistik/Avtalsfiler SCB-statistik/2019-20/Personal/Filer till databasen"
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"))
View(t1)
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "latin")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "latin1")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "utf8")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "latin1")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8") %>%
distinct(3,4,5,6,7)
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8") %>%
distinct(c(3,4,5,6,7))
f1 <- unique(t1$Forskningsämnesområde.0.)
f2 <- unique(t1$Forskningsämnesgrupp.1.)
f3 <- unique(t1$Kön)
f4 <- unique(t1$Åldersgrupp)
class(f1)
is.vector(f4)
vector(c("Biträdande lektorer", "Forskarassistenter", "Postdoktorer", "Övriga meriteringsanställda"))
f5 <-  c("Biträdande lektorer", "Forskarassistenter", "Postdoktorer", "Övriga meriteringsanställda")
expand(f1, f2, f3, f4, f5)
expand(f1)
cbind(f1, f2)
f1
f2
f1, f2
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8") %>%
distinct(3, 4, 5, 6)
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8")
t1 <- read.csv(file.path(p1, "fou-personal-forskamne-individer_2019_-v1.csv"), sep = ";", encoding = "UTF-8") %>%
distinct_at(.vars = c(4,5,6,7))
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
devtools::install_github("klutometis/roxygen")
uninstall(xfun)
uninstall("xfun")
devtools::install_github("klutometis/roxygen")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
installed.packages()
installed.packages()["Kansler"]
installed.packages()["Kansler/R/"]
installed.packages()["Kansler"]
installed.packages()[1]
installed.packages()[[1]]
installed.packages()[[2]]
installed.packages(1)
installed.packages("Kansler")
installed.packages("Hej")
library(Kansler)
detach("package:Kansler", unload = TRUE)
library(Kansler)
install.packages(c("backports", "codetools", "cowplot", "data.table", "diffobj", "foreign", "gdtools", "ggplot2", "janitor", "KernSmooth", "Matrix", "nlme", "officer"))
library(devtools)
library(roxygen2)
library(tidyr)
library(fs)
library(Kansler)
load_all()
# 6: sätt wd (mapp där filerna projektmappen hamnar) - välj så nära roten (c:/) som möjligt eftersom att åäö ofta innebär strul
setwd("C:/Users/martinl")
load_all()
library(Kansler)
library(devtools)
library(roxygen2)
library(tidyr)
library(fs)
# 6: sätt wd (mapp där filerna projektmappen hamnar) - välj så nära roten (c:/) som möjligt eftersom att åäö ofta innebär strul
setwd("C:/Users/martinl")
# 8: Byt wd till projektmappen
setwd("./Kansler")
load_all()
library(Kansler)
make_df()
x <- make_df()
View(x)
Kansler::gguka_line(x)
Kansler::gguka_line(df1 = x, x = nam, y = num, g = gro)
library(tidyr)
Kansler::gguka_line(df1 = x, x = nam, y = num, g = gro)
