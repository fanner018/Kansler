gguka_bar1 <- function(df1, x, y, g, pal, format = Svensk_procent ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
+ scale_y_continuous(labels = {{format}})
}
gguka_bar1(df12, V3, ., V2, pal = "uka_1", format = Svensk_procent)
#' @param y y-variabel (num)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df1, x, y, g, pal, format = Svensk_procent ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
gguka_bar1(df12, V3, ., V2, pal = "uka_1", format = Svensk_procent)
gguka_bar1(df12, V3, ., V2, pal = "uka_1")
#' @param y y-variabel (num)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df1, x, y, g, pal, format = Svensk_procent() ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
gguka_bar1(df12, V3, ., V2, pal = "uka_1")
#' @param y y-variabel (num)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df1, x, y, g, pal, format = "Svensk_procent" ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
gguka_bar1(df12, V3, ., V2, pal = "uka_1")
#' @param y y-variabel (num)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df1, x, y, g, pal, format = Svensk_procent ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
Svensk_procent(df12$V2)
Svensk_procent(df12$V3)
### Testa fÃ¤rger
df6 <- c(1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6)) %>%
cbind(c("a", "b", "c", "d", "e", "f")) %>%
as.data.frame() %>%
mutate(num = as.numeric(.))
df9 <- c(1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i")) %>%
as.data.frame()%>%
mutate(num = as.numeric(.))
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
as.data.frame()%>%
mutate(num = as.numeric(.))
gguka_bar1(df12, V3, num, V2, pal = "uka_1")
Svensk_procent(df12$num)
Svensk_procent(df12$num)
Svensk_procent(x = df12$num, ggr100 = F, n = 0)
Svensk_procent(x = df12$num, ggr100 = T, n = 0)
#' Svensk procent
#'
#' @param x tal som ska anges som procent
#' @param ggr100 boolean; TRUE: x ar i decimalform (och multipliceras med 100). Standard.
#'                        FALSE: x ar inte i decimalform (multpliceras inte med 100).
#' @param n antal decimaler (nsmall)
#'
#' @export
Svensk_procent <- function(x, ggr100 = TRUE, n = 0) {
paste0(format(round(x*(ggr100*100)), nsmall = n, decimal.mark =","), " %")
}
Svensk_procent(x = df12$num)
gguka_bar1(df12, V3, num, V2, pal = "uka_1")
Svensk_antal <- function(x, n = 0) {
paste0(format((x), big.mark = " ", nsmall = n, decimal.mark = ","))
}
Svensk_antal(1)
Svensk_antal(1000)
Svensk_antal(2000000)
Svensk_antal(200000)
Svensk_antal(20000)
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
gguka_bar1(df12, V3, num, V2, pal = "uka_1")
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#' @param format. default Svensk antal
#'
#' @return linjediagram
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_line <- function(df1, x, y, g, pal, format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_paletter)
#' @param df dataframe
#' @param format format. default Svensk antal
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df, x, y, g, pal, format = Svensk_antal ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
gguka_bar1(df12, V3, num, V2, pal = "uka_1", Svensk_procent)
gguka_bar1(df12, V3, num, V2, pal = "uka_1")
View(df12)
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
as.data.frame()%>%
mutate(num = as.numeric(.))
gguka_bar1(df12, V3, num, V2, pal = "uka_1")
gguka_bar1(df = df12, x = V2, y = num, g = V3, pal = "uka_1")
gguka_bar1(df = df12, x = V2, y = num, g = V3, pal = "uka_1", format = Svensk_antal))
gguka_bar1(df = df12, x = V2, y = num, g = V3, pal = "uka_1", format = Svensk_antal)
gguka_bar1(df = df12, x = V2, y = num, g = V3, pal = "uka_1", format = Svensk_antal)
gguka_bar1(df12, V2, num, V3)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_paletter)
#' @param df dataframe
#' @param format format. default Svensk antal
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df, x, y, g, pal = "uka_prim", format = Svensk_antal ) {
ggplot2::ggplot(df1, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
gguka_bar1(df12, V2, num, V3)
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
as.data.frame()%>%
mutate(y = as.numeric(.))
gguka_bar1(df12, V2, y, V3)
gguka_bar1(df = df12, V2, y, V3)
gguka_bar1(df = df12, "V2", "y", V3)
gguka_bar1(df = df12, "V2", "y", "V3")
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_paletter)
#' @param df dataframe
#' @param format format. default Svensk antal
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df, x = x, y = y, g = g, pal = "uka_prim", format = Svensk_antal ) {
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
as.data.frame()%>%
mutate(y = as.numeric(.),
x = V2,
g = V3)
gguka_bar1(df = df12)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_paletter)
#' @param df dataframe
#' @param format format. default Svensk antal
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar1 <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal ) {
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
gguka_bar1(df = df12)
gguka_bar1(df = df12, format = Svensk_procent)
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#' @param format. default Svensk antal
#'
#' @return linjediagram
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
gguka_line(df12)
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_farg_paletter)
#' @param df dataframe
#' @param format. default Svensk antal
#'
#' @return linjediagram
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
gguka_line(df12)
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
gguka_line(df12)
gguka_line(df12)
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0")
}
gguka_line(df12)
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df1 %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8)
}
gguka_line(df12)
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
gguka_line(df12)
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
cbind(c(rep("a", 3), rep("b", 3), rep("c", 3), rep("d", 3))) %>%
as.data.frame()%>%
mutate(y = as.numeric(.),
x = V2,
g = V3)
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
cbind(c(rep("a", 3), rep("b", 3), rep("c", 3), rep("d", 3))) %>%
as.data.frame()%>%
mutate(y = as.numeric(.),
x = V2,
g = V4)
gguka_line <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal) {
ymax <- df %>% dplyr::select({{y}}) %>% max()
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_line(aes(color = {{g}}),
size = 0.8) +
theme_uka1(angle = "a0") +
ggplot2::scale_color_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
ggplot2::scale_y_continuous(limits = c(0, ymax*1.2),
labels = {{format}})
}
gguka_line(df12)
gguka_bar1(df = df12, format = Svensk_procent)
gguka_line(df12)
gguka_bar1(df9)
gguka_bar1(df12)
### Testa fÃ¤rger
df6 <- c(1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6)) %>%
cbind(c("a", "b", "c", "d", "e", "f")) %>%
as.data.frame() %>%
mutate(y = as.numeric(.),
x = V2,
g = V3)
df9 <- c(1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i")) %>%
as.data.frame()%>%
mutate(y = as.numeric(.),
x = V2,
g = V3)
df12 <- c(1,1,1,1,1,1,1,1,1,1,1,1) %>%
cbind(c(1,2,3,4,5,6,7,8,9,10,11,12)) %>%
cbind(c("a", "b", "c", "d", "e", "f", "g", "h", "i","j","k","l")) %>%
cbind(c(rep("a", 3), rep("b", 3), rep("c", 3), rep("d", 3))) %>%
as.data.frame()%>%
mutate(y = as.numeric(.),
x = V2,
g = V4)
gguka_line(df)
gguka_line(df6)
gguka_line(df12)
gguka_bar1(df6)
gguka_bar1(df9)
gguka_bar1(df12)
gguka_bar1(df6, pal = "uka_lila")
gguka_bar1(df6, pal = "uka_bla")
gguka_bar1(df6, pal = "uka_1")
gguka_bar1(df6, pal = "uka_prim")
gguka_bar1(df6, pal = "uka_sek")
gguka_bar(df6, pal = "uka_sek")
#' @param g gruppvariabel
#' @param t fargpalett (se lista i uka_paletter)
#' @param df dataframe
#' @param format format. default Svensk antal
#'
#' @return stapeldiagram (staplat)
#' @export
#'
#' @examples uka_line(df1 = df, x = nam, y = num, g = gro)
#'
gguka_bar <- function(df, x = x, y = y, g = g, pal = "uka_1", format = Svensk_antal ) {
ggplot2::ggplot(df, ggplot2::aes(x = !!enquo(x), y = {{y}}, group = {{g}})) +
geom_bar(aes(fill = {{g}}),
stat = "identity",
position = "stack") +
theme_uka1(angle = "a0") +
ggplot2::scale_fill_manual(values = as.vector(uka_paletter[[{{pal}}]])) +
scale_y_continuous(labels = {{format}})
}
gguka_bar(df6, pal = "uka_sek")
#' Tema UKA
#'
#' Tema som anvands for formatering av figurer. Ar tankt att designad for uttag i formatet 4:6 / landscape.
#'
#' @param size anvands for att ange storlek pa text. default = 10
#' @param angle ange vinkel pa x-axelns text. "a0" default. "a90" ger 90 grader.
#'
#' @export
uka_tema <- function(size = 10, angle = "a0")  {
if (angle == "a0") {a = 0; h = 0.5} else if (angle == "a90") {a = 90; h <- 1}
ggplot2::theme(legend.position = "bottom",
axis.title.x = ggplot2::element_blank(),
axis.title.y = ggplot2::element_blank(),
legend.title  = ggplot2::element_blank(),
axis.ticks.y.left = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
text = ggplot2::element_text(colour = "black", size = size),
axis.text.x = ggplot2::element_text(angle = a, hjust = h),
plot.background = ggplot2::element_rect(fill = "white"),
panel.background = ggplot2::element_rect(fill = "white"),
legend.background = ggplot2::element_rect(fill = "white"),
#legend.margin = ggplot2::element_rect(fill = "white"),
legend.key = ggplot2::element_rect(fill = "white"),
panel.grid.major.x = ggplot2::element_blank(),
panel.grid.major.y = ggplot2::element_line(color = "#9d9d9c", size = 0.1))
}
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
uka_tema()
uka_tema("text")
Svensk_antal()
Svensk_antal(1)
Svensk_antal(10000)
Svensk_antal(10000, n = 1)
num <- c(10123, 34566, 45678, 234)
Svensk_antal(num)
Svensk_procent(c(67, 100, 3), ggr100 = F)
Svensk_procent(c(67, 100, 3), ggr100 = T)
Svensk_procent(c(67, 100, 3), ggr100 = F)
library(devtools)
library(tidyr)
library(dplyr)
library(ggplot2)
document()
source('C:/Users/martinl/Kansler/R/Kansler grafik.R', encoding = 'UTF-8')
load_all()
document()
document()
library(devtools)
library(tidyr)
library(dplyr)
library(ggplot2)
document()
load_all()
install_github("mljswe/Kansler")
document()
usethis::browse_github_pat()
create_github_token()
library(Kansler)
install_github("mljswe/Kansler")
usethis::edit_r_environ()
document()
library(Kansler)
document()
document(force = TRUE)
document()
document()
load_all()
library(devtools)
library(tidyr)
library(dplyr)
library(ggplot2)
load_all()
document()
